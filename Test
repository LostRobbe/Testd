-- Aggressives Anti-AutoDrive + Debug (bereinigt)
if getgenv().Key == "ThisIsLostHub" then
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local RunService = game:GetService("RunService")
    local UserInputService = game:GetService("UserInputService")

    -- Debug-Flag (setze true für Konsolen-Output, vor dem Laden)
    getgenv().DriveDebug = getgenv().DriveDebug or true

    -- Input flag
    local accelPressed = false
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        local k = input.KeyCode
        if k == Enum.KeyCode.W or k == Enum.KeyCode.Up then
            accelPressed = true
        end
    end)
    UserInputService.InputEnded:Connect(function(input)
        local k = input.KeyCode
        if k == Enum.KeyCode.W or k == Enum.KeyCode.Up then
            accelPressed = false
        end
    end)

    -- helper: get current VehicleSeat if sitzt
    local function getSeat()
        local char = LocalPlayer.Character
        if not char then return nil end
        local humanoid = char:FindFirstChildWhichIsA("Humanoid")
        if humanoid then
            local seat = humanoid.SeatPart
            if seat and seat:IsA("VehicleSeat") then return seat end
        end
        return nil
    end

    -- unsere BodyInstances (eigenes BV behalten)
    local myBV = Instance.new("BodyVelocity")
    myBV.Name = "LostHub_BodyVelocity"
    myBV.MaxForce = Vector3.new(0,0,0)
    myBV.Velocity = Vector3.new(0,0,0)

    local myBF = Instance.new("BodyForce")
    myBF.Name = "LostHub_BodyForce"
    myBF.Force = Vector3.new(0,0,0)

    -- Einstellungen
    getgenv().targetSpeed = getgenv().targetSpeed or 40  -- studs/s
    getgenv().accel = getgenv().accel or 100            -- Beschleunigung (höher = schneller auf Ziel)
    getgenv().downforce = getgenv().downforce or 500
    getgenv().DriveDebugInterval = getgenv().DriveDebugInterval or 1 -- Sekunden

    -- Debug-Timer
    local debugTimer = 0

    RunService.Heartbeat:Connect(function(delta)
        local seat = getSeat()
        local vehicle = seat and seat.Parent
        local primary = vehicle and vehicle.PrimaryPart

        -- Wenn kein Fahrzeug/PrimaryPart -> sicherstellen, dass unsere Instanzen nicht parented sind
        if not primary then
            if myBV.Parent then myBV.Parent = nil end
            if myBF.Parent then myBF.Parent = nil end
            return
        end

        -- parenten, falls noch nicht
        if myBV.Parent ~= primary then
            myBV.Parent = primary
            myBF.Parent = primary
        end

        local direction = primary.CFrame.LookVector
        local forwardSpeed = math.max(0, primary.Velocity:Dot(direction))

        -- Entscheiden, ob wir fahren sollen
        local shouldDrive = false
        local throttleValue = 0

        -- 1) VehicleSeat.Throttle prüfen
        if seat and seat:IsA("VehicleSeat") and seat.Throttle and seat.Throttle ~= 0 then
            shouldDrive = true
            throttleValue = math.clamp(seat.Throttle, -1, 1)
        end

        -- 2) Fallback lokaler Tastendruck (nur sinnvoll, wenn Spieler im Sitz ist)
        if not shouldDrive and accelPressed and seat then
            shouldDrive = true
            throttleValue = 1
        end

        -- Wenn wir fahren wollen und nur vorwärts (throttle > 0)
        if shouldDrive and throttleValue > 0 then
            -- aktivieren: starke MaxForce und gewünschte Geschwindigkeit setzen
            myBV.MaxForce = Vector3.new(1e5, 1e5, 1e5)
            local desired = getgenv().targetSpeed * throttleValue
            local newSpeed = math.min(forwardSpeed + getgenv().accel * delta, desired)
            myBV.Velocity = direction * newSpeed
        else
            -- KEIN GAS: deaktivieren wir unsere BV-Kraft und entfernen fremde BVs
            myBV.MaxForce = Vector3.new(0, 0, 0)
            myBV.Velocity = Vector3.new(0, primary.Velocity.Y, 0)
            -- Entferne alle Fremd-BodyVelocity auf der PrimaryPart (außer unser myBV)
            for _, inst in ipairs(primary:GetDescendants()) do
                if inst:IsA("BodyVelocity") and inst ~= myBV then
                    pcall(function()
                        inst:Destroy()
                    end)
                end
            end
            -- zusätzlich AssemblyLinearVelocity X/Z auf 0 setzen (manchmal nötig)
            local av = primary.AssemblyLinearVelocity
            if av then
                primary.AssemblyLinearVelocity = Vector3.new(0, av.Y, 0)
            end
        end

        -- Downforce konstant anwenden (unabhängig vom Fahren)
        myBF.Force = Vector3.new(0, -getgenv().downforce, 0)

        -- Debug-Logging alle X Sekunden (nicht spammy)
        if getgenv().DriveDebug then
            debugTimer = debugTimer + delta
            if debugTimer >= getgenv().DriveDebugInterval then
                debugTimer = 0
                -- Zähle noch vorhandene BodyVelocity (inkl. unserers)
                local bvCount = 0
                for _, inst in ipairs(primary:GetDescendants()) do
                    if inst:IsA("BodyVelocity") then bvCount = bvCount + 1 end
                end
                print(string.format(
                    "[LostHub DEBUG] Throttle=%s | accelPressed=%s | forwardSpeed=%.2f | BVcount=%d | myBVParent=%s",
                    tostring((seat and seat.Throttle) or "nil"),
                    tostring(accelPressed),
                    forwardSpeed,
                    bvCount,
                    tostring((myBV.Parent and myBV.Parent:GetFullName()) or "nil")
                ))
            end
        end
    end)
else
    warn("[LostHub] Wrong Key, Find key in discord!")
end            myBV.MaxForce = Vector3.new(0, 0, 0)
            myBV.Velocity = Vector3.new(0, primary.Velocity.Y, 0)
            -- Entferne alle Fremd-BodyVelocity auf der PrimaryPart (außer unser myBV)
            for _, inst in ipairs(primary:GetDescendants()) do
                if inst:IsA("BodyVelocity") and inst ~= myBV then
                    -- Versuch, so vorsichtig wie möglich zu entfernen
                    pcall(function()
                        inst:Destroy()
                    end)
                end
            end
            -- zusätzlich AssemblyLinearVelocity X/Z auf 0 setzen (manchmal nötig)
            local av = primary.AssemblyLinearVelocity
            if av then
                primary.AssemblyLinearVelocity = Vector3.new(0, av.Y, 0)
            end
        end

        -- Downforce konstant anwenden (unabhängig vom Fahren)
        myBF.Force = Vector3.new(0, -getgenv().downforce, 0)

        -- Debug-Logging alle X Sekunden (nicht spammy)
        if getgenv().DriveDebug then
            debugTimer = debugTimer + delta
            if debugTimer >= getgenv().DriveDebugInterval then
                debugTimer = 0
                -- Zähle noch vorhandene BodyVelocity (inkl. unserers)
                local bvCount = 0
                for _, inst in ipairs(primary:GetDescendants()) do
                    if inst:IsA("BodyVelocity") then bvCount = bvCount + 1 end
                end
                print(string.format(
                    "[LostHub DEBUG] Throttle=%s | accelPressed=%s | forwardSpeed=%.2f | BVcount=%d | myBVParent=%s",
                    tostring(seat and seat.Throttle or "nil"),
                    tostring(accelPressed),
                    forwardSpeed,
                    bvCount,
                    tostring(myBV.Parent and myBV.Parent:GetFullName() or "nil")
                ))
            end
        end
    end)
else
    warn("[LostHub] Wrong Key, Find key in discord!")
end    end)
else
    warn("[LostHub] Wrong Key, Find key in discord!")
end
